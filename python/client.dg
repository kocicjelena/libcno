import '/sys'
import '/ssl'
import '/asyncio'
import '/urllib/parse/urlparse'

import '/common'
import '/cno'


main = async $ url loop ->
  sctx = if url.scheme == 'https' => ssl.SSLContext ssl.PROTOCOL_TLSv1_2
            otherwise             => None
  port = if url.port              => url.port
            url.scheme == 'https' => 443
            otherwise             => 80
  sctx =>
    sctx.set_npn_protocols  ['h2', 'http/1.1']
    sctx.set_alpn_protocols ['h2', 'http/1.1']

  _, client = await loop.create_connection (-> cno.AIOClient loop force_http2: True) url.hostname port ssl: sctx
  await common.print_response $ await client.request 'GET' url.path [(':scheme', url.scheme), (':authority', url.netloc)] b''


len sys.argv != 2 => exit $ 'usage: {0} <url>'.format *: sys.argv
loop = asyncio.get_event_loop!
loop.run_until_complete $ main (urlparse $ sys.argv !! 1) loop
